<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".Teoria_Activity">


    <ScrollView
        android:id="@+id/scrollView2"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        tools:layout_editor_absoluteX="0dp"
        tools:layout_editor_absoluteY="1dp">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical">

            <TextView
                android:id="@+id/textView2"
                android:layout_width="96dp"
                android:layout_height="31dp"
                android:layout_marginStart="176dp"
                android:layout_marginTop="72dp"
                android:layout_marginEnd="177dp"
                android:text="@string/tv2"
                android:textSize="24sp"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toTopOf="parent" />

            <TextView
                android:id="@+id/textView3"
                android:layout_width="352dp"
                android:layout_height="297dp"
                android:layout_marginStart="16dp"
                android:layout_marginTop="44dp"
                android:layout_marginEnd="16dp"
                android:text="El algoritmo Round Robin (RR) es un algoritmo de programación de CPU. A cada proceso se le proporciona un tiempo fijo para ejecutarse de manera cíclica. El tiempo fijo se denomina QUANTUM o intervalo de tiempo. Una vez que se ejecuta un proceso durante un período de tiempo determinado, se reemplaza y se ejecuta otro proceso durante otro período de tiempo determinado.  El objetivo del algoritmo es maximizar la utilización de la CPU."
                android:textSize="20sp"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintHorizontal_bias="0.0"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toBottomOf="@+id/textView2" />

            <TextView
                android:id="@+id/textView4"
                android:layout_width="339dp"
                android:layout_height="wrap_content"
                android:layout_marginStart="16dp"
                android:layout_marginTop="13dp"
                android:layout_marginEnd="16dp"
                android:scrollbars="vertical"
                android:text="Tiempo de respuesta= Tiempo de rafaga + Tiempo de espera"
                android:textSize="20sp"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toBottomOf="@+id/textView3" />


        </LinearLayout>
    </ScrollView>

    <TextView
        android:id="@+id/textView8"
        android:layout_width="340dp"
        android:layout_height="45dp"
        android:layout_marginStart="55dp"
        android:layout_marginTop="12dp"
        android:layout_marginEnd="55dp"
        android:text="Tiempo de espera = tiempo de respuesta- tiempo de rafaga"
        android:textSize="20sp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.0"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/scrollView2" />


</androidx.constraintlayout.widget.ConstraintLayout>